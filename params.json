{
  "name": "Injular",
  "tagline": "Inject angular templates, controllers and directives with Browsersync",
  "body": "# Injular <sub><sup>(AngularJS 1.x hot reloading)</sup></sub>\r\n\r\n[![npm version](http://img.shields.io/npm/v/bs-injular.svg)](https://npmjs.org/package/bs-injular)\r\n[![build status](https://img.shields.io/travis/tfoxy/bs-injular.svg)](https://travis-ci.org/tfoxy/bs-injular)\r\n[![codecov](https://codecov.io/gh/tfoxy/bs-injular/branch/master/graph/badge.svg)](https://codecov.io/gh/tfoxy/bs-injular)\r\n[![Gitter](https://badges.gitter.im/tfoxy/bs-injular.svg)](https://gitter.im/tfoxy/bs-injular?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n\r\n> Inject angular templates, controllers and directives with Browsersync\r\n\r\nThis is a plugin for the awesome [BrowserSync](https://browsersync.io).\r\n\r\n\r\n## Install\r\n\r\n```shell\r\n$ npm install --save-dev bs-injular browser-sync\r\n```\r\n\r\n\r\n## Try it\r\n\r\n```shell\r\ngit clone https://github.com/tfoxy/bs-injular-demo.git\r\ncd bs-injular-demo\r\nnpm install && bower install\r\ngulp serve\r\n```\r\n\r\nModify the `*.html`, `*.controller.js` and `*.directive.js` files inside `src/app`\r\nand watch the changes instantly.\r\n\r\n**[Click here to watch GIF of demo](https://raw.githubusercontent.com/tfoxy/bs-injular-demo/master/bs-injular.gif)**\r\n\r\n\r\n## Setup\r\n\r\n### Minimal\r\n\r\n```js\r\nvar browserSync = require('browser-sync');\r\nvar bsInjular = require('bs-injular');\r\n\r\nbrowserSync.use(bsInjular);\r\n\r\nbrowserSync({\r\n  /* browserSync options */\r\n});\r\n```\r\n\r\nThis will inject all html files inside an app folder.\r\n\r\n### Recommended\r\n\r\n```js\r\nvar browserSync = require('browser-sync');\r\nvar bsInjular = require('bs-injular');\r\n\r\nbrowserSync.use(bsInjular, {\r\n  templates: '**/app/**/*.html',\r\n  controllers: '**/app/**/*.controller.js',\r\n  directives: '**/app/**/*.directive.js',\r\n  filters: '**/app/**/*.filter.js',\r\n  angularFile: '/bower_components/angular/angular.js',\r\n  moduleFile: '**/app/index.module.js',\r\n  ngApp: 'fooApp'\r\n});\r\n\r\nbrowserSync({\r\n  /* browserSync options */\r\n});\r\n```\r\n\r\nThis supports template, controller, directive and filter injection.\r\n\r\n\r\n## Configuration\r\n\r\nBy default, the following options are provided:\r\n\r\n```js\r\n{\r\n  templates: '**/app/**/*.html',\r\n  notify: true\r\n}\r\n```\r\n\r\nIf you want to inject controllers, you must provide the following properties:\r\n\r\n```js\r\n{\r\n  controllers: '**/app/**/*.controller.js',\r\n  moduleFile: '**/app/index.module.js',\r\n  ngApp: 'fooApp'\r\n}\r\n```\r\n\r\nThe module file and module name (ngApp value) are necessary to get the `$controllerProvider`\r\nin the config phase so that the controllers can be injected later.\r\n\r\nIf you want to inject directives, you must provide the following properties:\r\n\r\n```js\r\n{\r\n  directives: '**/app/**/*.directive.js',\r\n  angularFile: '/bower_components/angular/angular.js',\r\n  moduleFile: '**/app/index.module.js',\r\n  ngApp: 'fooApp'\r\n}\r\n```\r\n\r\nThe module file and module name (ngApp value) are necessary to get the `$compileProvider`\r\nin the config phase so that the directives can be injected later.  \r\nThe angular file is necessary to keep track of the directives present in a file.\r\n\r\n**WARNING:** The controller files must retrieve the module using `angular.module()`\r\nand only use the `controller` recipe. The same applies to directives.\r\n\r\n```js\r\nangular\r\n  .module('myProject')\r\n  .controller('Controller', Controller);\r\n\r\nfunction Controller() {\r\n  // Controller code here\r\n}\r\n```\r\n\r\nIf there is any other angular recipe, it will be ignored.\r\n\r\n\r\nAlso, when using the BrowserSync API, you must only reload the changed script file:\r\n`browserSync.reload('/app/main/main.controller.js')`.\r\nWhen `browserSync.stream` is used with multiple source files, it will reload the page.  \r\nIf you use \r\n[generator-gulp-angular](https://github.com/Swiip/generator-gulp-angular),\r\nyou must change the watches behaviour so that only the changed script is reloaded.  \r\nSee:\r\n[scripts.js](https://github.com/tfoxy/bs-injular-demo/blob/master/gulp/scripts.js#L13-L18)\r\n[watch.js](https://github.com/tfoxy/bs-injular-demo/blob/master/gulp/watch.js#L26-L32)\r\n\r\n\r\n## Help\r\n\r\nIf you have some problems with the configuration,\r\nyou can get more information by setting the log level of Browsersync to `debug`:\r\n\r\n```js\r\nbrowserSync({\r\n  logLevel: 'debug',\r\n  /* browserSync options */\r\n});\r\n```\r\n\r\nIf you get the following messages when changing a file:\r\n```sh\r\n[BS] [Injular] No moduleFile was matched: **/app/index.module.js\r\n[BS] [Injular] No angularFile was matched: /bower_components/angular/angular.js\r\n```\r\nyou can check if those patterns match any of the requests made to the server.\r\n\r\nIf you need more help, you can submit an issue\r\nor leave a message in [gitter](https://gitter.im/tfoxy/bs-injular).\r\n\r\n\r\n## What's missing\r\n\r\n* Support for javascript bundlers: webpack, browserify, rollup<i></i>.js\r\n\r\n* Show the file and line number when an error is thrown in an injected script.  \r\n  Currently, the script is evaluated using `Function`.\r\n\r\n\r\n## Resources\r\n\r\n* [BrowserSync](https://github.com/shakyShane/browser-sync)\r\n* [BrowserSync SPA](https://github.com/shakyShane/browser-sync-spa)\r\n\r\nInspired by\r\n[shakyShane/html-injector](https://github.com/shakyShane/html-injector)\r\nand\r\n[pashaigood/browser-sync-angular-template](https://github.com/pashaigood/browser-sync-angular-template)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}